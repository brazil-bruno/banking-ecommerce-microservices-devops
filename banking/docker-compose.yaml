version: '3'
services:
  ## PostgresSQL Docker Compose Config
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  ## PgAdmin Docker Compose Config
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  # Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  # EUREKA
  eureka:
    image: place here your docker image
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  # ADDRESS
  address:
    image: place here your docker image
    container_name: address
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres

  # CLIENT
  client:
    image: place here your docker image
    container_name: client
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres

  # ACCOUNT
  account:
    image: place here your docker image
    container_name: account
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres

  # OAUTH
  oauth:
    image: place here your docker image
    container_name: oauth
    environment:
      - SECURITY_OAUTH2_CLIENT_CLIENT-ID=banking
      - SECURITY_OAUTH2_CLIENT_CLIENT-SECRET=banking123
      - JWT_SECRET=MY-JWT-SECRET
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  # GATEWAY
  gateway:
    image: place here your docker image
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=MY-JWT-SECRET
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

## Networks
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

## Volumes
volumes:
  postgres:
  pgadmin: